# Copyright Louis Dionne 2013-2016
# Copyright Gonzalo BG 2014-2016
# Copyright Julian Becker 2015
# Copyright Manu Sánchez 2015
# Copyright Casey Carter 2015-2016
# Copyright Eric Niebler 2015-2016
# Copyright Paul Fultz II 2015-2016

# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.txt or copy at http://boost.org/LICENSE_1_0.txt)

# Adapted from various sources, including:
# - Louis Dionne's Hana: https://github.com/ldionne/hana
# - Paul Fultz II's FIT: https://github.com/pfultz2/Fit
language: cpp
script: cmake

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/cmake

matrix:
  include:
    - env: BUILD_TYPE=Release CPP=11 ASAN=Off SYSTEM_LIBCXX=On
      os: osx
      compiler: clang

    # ASAN disabled for clang < 3.8 builds per resolution of
    #  https://llvm.org/bugs/show_bug.cgi?id=22757

    - env: CLANG_VERSION=3.6 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=On
      os: linux
      addons: &clang36
        apt:
          packages:
            - util-linux
            - clang-3.6
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6

    - env: CLANG_VERSION=3.6 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=On
      os: linux
      addons: *clang36

    - env: CLANG_VERSION=3.7 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=On
      os: linux
      addons: &clang37
        apt:
          packages:
            - util-linux
            - clang-3.7
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7

    - env: CLANG_VERSION=3.7 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=On
      os: linux
      addons: *clang37

    - env: CLANG_VERSION=3.8 BUILD_TYPE=Release CPP=11 ASAN=On LIBCXX=On
      os: linux
      addons: &clang38
        apt:
          packages:
            - util-linux
            - clang-3.8
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8

    - env: CLANG_VERSION=3.8 BUILD_TYPE=Release CPP=14 ASAN=On LIBCXX=On
      os: linux
      addons: *clang38

    - env: CLANG_VERSION=3.9 BUILD_TYPE=Release CPP=11 ASAN=On LIBCXX=On
      os: linux
      addons: &clang39
        apt:
          packages:
            - util-linux
            - clang-3.9
            - g++-6
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.9

    - env: CLANG_VERSION=3.9 BUILD_TYPE=Release CPP=14 ASAN=On LIBCXX=On
      os: linux
      addons: *clang39

    - env: CLANG_VERSION=5.0 BUILD_TYPE=Debug CPP=11 ASAN=On LIBCXX=On
      os: linux
      addons: &clang5
        apt:
          packages:
            - util-linux
            - clang-5.0
            - g++-6
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise

    - env: CLANG_VERSION=5.0 BUILD_TYPE=Release CPP=11 ASAN=On LIBCXX=On
      os: linux
      addons: *clang5

    - env: CLANG_VERSION=5.0 BUILD_TYPE=Debug CPP=14 ASAN=On LIBCXX=On
      os: linux
      addons: *clang5

    - env: CLANG_VERSION=5.0 BUILD_TYPE=Release CPP=14 ASAN=On LIBCXX=On
      os: linux
      addons: *clang5

    - env: CLANG_VERSION=5.0 BUILD_TYPE=Debug CPP=1z ASAN=On LIBCXX=On
      os: linux
      addons: *clang5

    - env: CLANG_VERSION=5.0 BUILD_TYPE=Release CPP=1z ASAN=On LIBCXX=On
      os: linux
      addons: *clang5

    # - env: GCC_VERSION=4.8 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=Off
    #   os: linux
    #   addons: &gcc48
    #     apt:
    #       packages:
    #         - g++-4.8
    #       sources:
    #         - ubuntu-toolchain-r-test

    - env: GCC_VERSION=4.9 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: &gcc49
        apt:
          packages:
            - g++-4.9
          sources:
            - ubuntu-toolchain-r-test

    - env: GCC_VERSION=4.9 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc49

    - env: GCC_VERSION=5 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: &gcc5
        apt:
          packages:
            - g++-5
          sources:
            - ubuntu-toolchain-r-test

    - env: GCC_VERSION=5 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc5

    - env: GCC_VERSION=6 BUILD_TYPE=Debug CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: &gcc6
        apt:
          packages:
            - g++-6
          sources:
            - ubuntu-toolchain-r-test

    - env: GCC_VERSION=6 BUILD_TYPE=Release CPP=11 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc6

    - env: GCC_VERSION=6 BUILD_TYPE=Debug CPP=14 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc6

    - env: GCC_VERSION=6 BUILD_TYPE=Release CPP=14 ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc6

    - env: GCC_VERSION=6 BUILD_TYPE=Debug CPP=1z ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc6

    - env: GCC_VERSION=6 BUILD_TYPE=Release CPP=1z ASAN=Off LIBCXX=Off
      os: linux
      addons: *gcc6

# Install dependencies
before_install:
  - export CHECKOUT_PATH=`pwd`;
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew update
      brew install gnu-sed --with-default-names
      brew install gnu-which --with-default-names
    fi
  - |
    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      if [ -z "$(ls -A ${TRAVIS_BUILD_DIR}/deps/cmake/bin)" ]; then
        CMAKE_URL="https://cmake.org/files/v3.6/cmake-3.6.2-Linux-x86_64.tar.gz"
        mkdir -p ${TRAVIS_BUILD_DIR}/deps/cmake && travis_retry wget --no-check-certificate --quiet -O - "${CMAKE_URL}" | tar --strip-components=1 -xz -C ${TRAVIS_BUILD_DIR}/deps/cmake
      fi
      export PATH="${TRAVIS_BUILD_DIR}/deps/cmake/bin:${PATH}"
    else
      if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
    fi
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - if [ "$CLANG_VERSION" == "3.4" ]; then export CXX="/usr/local/clang-3.4/bin/clang++" CC="/usr/local/clang-3.4/bin/clang"; fi
  - which $CXX
  - which $CC
  - $CXX --version
  - if [ "$ASAN" == "On" ]; then export SANITIZER=Address; fi
  - if [ -n "$CLANG_VERSION" ]; then sudo PATH="${PATH}" CXX="$CXX" CC="$CC" ./install_libcxx.sh; fi

install:
  - cd $CHECKOUT_PATH
  - mkdir -p build
  - cd build
  - if [ -n "$CLANG_VERSION" -a "$ASAN" == "On" ]; then CXX_FLAGS="${CXX_FLAGS} -fsanitize=address,undefined,integer -fno-omit-frame-pointer -fno-sanitize=unsigned-integer-overflow"; fi
  - if [ -n "$GCC_VERSION" -a "$ASAN" == "On" ]; then CXX_FLAGS="${CXX_FLAGS} -fsanitize=address,undefined -fno-omit-frame-pointer"; fi
  - if [ -n "$CLANG_VERSION" ]; then CXX_FLAGS="${CXX_FLAGS} -D__extern_always_inline=inline"; fi
  - if [ "$LIBCXX" == "On" ]; then CXX_FLAGS="${CXX_FLAGS} -stdlib=libc++ -nostdinc++ -cxx-isystem /usr/include/c++/v1/ -Wno-unused-command-line-argument"; fi
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" -DCMAKE_EXE_LINKER_FLAGS="${CXX_LINKER_FLAGS}" -DRANGES_CXX_STD=$CPP -DRANGE_V3_NO_HEADER_CHECK=1
  - make -j2 VERBOSE=1

script:
  - ctest -j2 -VV ${CTEST_FLAGS}

notifications:
  email: false
