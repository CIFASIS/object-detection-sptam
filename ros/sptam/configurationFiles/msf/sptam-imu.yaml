data_playback: true             # Set to true for playback, set to false on the real system.
core/msf_output_frame: "map"
core/imu_frame: "imu4"

##############################
#########IMU PARAMETERS#######
##############################
# The IMU measurement model used in msf contains two types of sensor errors, 
# a high frequency additive white noise and 
# a slower varying sensor bias.  
# See the following link for more information 
# https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics
# 
# The white noise is characterized with the continuous time noise spectral density. 
# The noise spectral density is sometime also referred to as noise density.
# The units of the noise spectral density are:
#  acc:  [m/s^2/sqrt(Hz)]
#  gyro: [rad/s/sqrt(Hz)]
# The noise spectral density can be found in the datasheet of the IMU.
# 
# The variation of the bias is characterized as a random walk. 
# See https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics for more information
# The units of the random walk are:
#  acc:  [m/s^3/sqrt(Hz)]
#  gyro: [rad/s^2/sqrt(Hz)]
 
####### ADIS 16448 (values from EUROC dataset)
#core/core_noise_acc: 0.0022563    # [m/s^2/sqrt(Hz)] 
#core/core_noise_gyr: 2.0000e-3    # [rad/s/sqrt(Hz)] 

#core/core_fixed_bias: false
#core/core_noise_accbias: 3.0000e-3  # [m/s^3/sqrt(Hz)]
#core/core_noise_gyrbias: 1.9393e-05 # [rad/s^2/sqrt(Hz)]

# values from https://github.com/ethz-asl/ethzasl_msf/issues/148
core/core_noise_acc: 4.0000e-3    # [m/s^2/sqrt(Hz)] 
core/core_noise_gyr: 3.4e-04    # [rad/s/sqrt(Hz)] 

core/core_fixed_bias: false
core/core_noise_accbias: 6.0000e-3  # [m/s^3/sqrt(Hz)]
core/core_noise_gyrbias: 3.8e-05 # [rad/s^2/sqrt(Hz)]


#######################################
#########Pose Sensor Parameters #######
#######################################
pose_sensor/pose_absolute_measurements: true
pose_sensor/pose_measurement_world_sensor: true   # Selects if sensor measures its position 
                                                  # w.r.t. world (true, e.g. Vicon) or the position 
                                                  # of the world coordinate system w.r.t. the 
                                                  # sensor (false, e.g. ethzasl_ptam).
pose_sensor/pose_delay: -0.00416376281916         # [s] delay of pose sensor w.r.t. imu

# For the pose sensor noise levels use the std deviation the units are
#  position: [m]
#  orientation: [rad]
pose_sensor/pose_use_fixed_covariance: false
pose_sensor/pose_noise_meas_p: 0.01              # [m]
pose_sensor/pose_noise_meas_q: 0.02              # [rad]

pose_sensor/pose_initial_scale: 1
pose_sensor/pose_fixed_scale: true
pose_sensor/pose_noise_scale: 0.0

# Transformation that expresses the position and orientation of the gravity aligned world frame 
# w.r.t the vision/camera frame
pose_sensor/pose_fixed_p_wv: true # TODO: estos dos deberian ser fixed para las primeras pruebas probablemente
pose_sensor/pose_noise_p_wv: 0.0
pose_sensor/pose_fixed_q_wv: true
pose_sensor/pose_noise_q_wv: 0.0

# Transformation that expresses the position and orientation of the pose-sensor w.r.t. the IMU 
# frame of reference, expressed in the IMU frame of reference.
pose_sensor/pose_fixed_p_ic: true
pose_sensor/pose_noise_p_ic: 0.001
pose_sensor/pose_fixed_q_ic: true
pose_sensor/pose_noise_q_ic: 0.001

# values from https://github.com/ethz-asl/rovio/issues/63

pose_sensor/init/q_ic/x: -0.008
pose_sensor/init/q_ic/y: 0.010
pose_sensor/init/q_ic/z: 0.702
pose_sensor/init/q_ic/w: 0.712

pose_sensor/init/p_ic/x: -0.022
pose_sensor/init/p_ic/y: -0.065
pose_sensor/init/p_ic/z: 0.01

